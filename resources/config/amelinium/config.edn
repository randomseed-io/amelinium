{

 ;; System settings

 :amelinium.system/properties #ref :amelinium.app/properties
 :amelinium.system/timezone   :UTC

 ;; Application properties

 :amelinium.app/properties {:name        "Amelinium"
                            :title       "Amelinium Web Service"
                            :profile     :production
                            :author      "Paweł Wilk"
                            :description "The Web App Server"
                            :version     "1.0.0"
                            :license     "Copyright by Paweł Wilk"}

 ;; Application shortcuts

 :amelinium.app/db           #ref :amelinium.db/main
 :amelinium.app/logger       #ref :amelinium.logging/unilog
 :amelinium.app/timezone     #ref :amelinium.system/timezone
 :amelinium.app/http-server  #ref :amelinium.http.server/undertow
 :amelinium.app/http-routes  #ref :amelinium.http.router/web-routes
 :amelinium.app/http-router  #ref :amelinium.http.router/web
 :amelinium.app/http-handler #ref :amelinium.http.handler/web
 :amelinium.app/init         #ref :amelinium.logging/unilog

 ;; Databases (usernames and passwords loaded from other files)

 :amelinium.db/main.props {:dbtype               "mariadb"
                           :dbname               "amelinium"
                           :logger               #ref :amelinium.app/logger
                           :app-timezone         #ref :amelinium.app/timezone
                           :maximumPoolSize      20
                           :connectionTestQuery  "SELECT 1"
                           :dataSourceProperties {:localSocket           "/tmp/mysql.sock"
                                                  :useLegacyDatetimeCode false
                                                  :serverTimezone        "UTC"}}

 :amelinium.db/main {:properties  #ref :amelinium.db/main.props
                     :initializer amelinium.db/pool-datasource
                     ;;:initializer next.jdbc/get-datasource
                     :finalizer   amelinium.db/close-pool
                     :suspender   amelinium.db/suspend-pool
                     :resumer     amelinium.db/resume-pool
                     :caches      #ref :amelinium.db/caches}

 :amelinium.db/caches {:amelinium.model.user/settings-cache {:ttl [4  seconds] :size 1024}
                       :amelinium.model.user/props-cache    {:ttl [10 seconds] :size 1024}
                       :amelinium.model.user/ids-cache      {:size 2048}}

 ;; Buffered database loggers

 :amelinium.common.oplog.auth/log {:db           #ref :amelinium.db/main
                                   :table        :authlog
                                   :timeout      [25 seconds]
                                   :buffered-max 108}

 ;; Lazy request map

 :amelinium.http.middleware.lazy-req/all {:enabled? true}


 ;; Swagger support

 :amelinium.common.swagger/handler    {:enabled? true}
 :amelinium.common.swagger/handler-ui {:enabled? true}

 ;; HTTP middleware

 :amelinium.http.middleware.remote-ip/all {:proxy-header :x-forwarded-for
                                           :handler      amelinium.http.middleware.remote-ip/handler
                                           :proxy-for    #ref :amelinium.http.middleware.remote-ip/reserved}

 ;;:amelinium.http.middleware.db/amelinium {:db #ref :amelinium.db/main :name :amelinium.db/main}

 :amelinium.http.middleware.headers/web {:server                  :header/remove
                                         :X-Powered-By            "Amelinium"
                                         :Content-Security-Policy {:default-src ["'self'"]}}

 :amelinium.http.middleware.session/web {:db               #ref :amelinium.db/main
                                         :cache-ttl        [14 seconds]
                                         :cache-size       256
                                         :token-cache-ttl  [30 minutes]
                                         :token-cache-size 2048
                                         :wrong-ip-expires true
                                         :single-session?  true
                                         :secured?         false
                                         :handler          amelinium.http.middleware.session/handler
                                         :expires          [15 minutes]
                                         :hard-expires     [1 hour]
                                         :config-key       :session/config
                                         :session-key      :session
                                         :session-id-path  [:form-params "session-id"]}

 :amelinium.http.middleware.roles/web {:db                    #ref :amelinium.db/main
                                       :cache-ttl             [2 minutes]
                                       :cache-size            256
                                       :handler               amelinium.http.middleware.roles/handler
                                       :session/config        #ref :amelinium.http.middleware.session/web
                                       :query-roles-fn        nil
                                       :context-column        :slug
                                       :authorize-default?    true
                                       :unauthorized-redirect nil
                                       :req-context-fn        nil
                                       :req-self-role-fn      nil
                                       :req-context-path      [:path-params :client]
                                       :req-self-path         [:reitit.core/match :data :self?]
                                       :req-self-check-path   nil
                                       :global-context        :!
                                       :anonymous-role        :anonymous
                                       :logged-in-role        :user
                                       :known-user-role       :known
                                       :self-role             :self
                                       :keep-unknown?         true
                                       :roles                 {:admin   "Organization Admin"
                                                               :manager "Organization Manager"
                                                               :tester  "Organization Tester"
                                                               :user    "Logged-in User"
                                                               :self    "Resource Owner"
                                                               :banned  "Banned User"}}

 :amelinium.http.middleware.language/web-supported [:en :pl]
 :amelinium.http.middleware.language/web-pickers   {:default [amelinium.http.middleware.language/form-params-picker-str
                                                              amelinium.http.middleware.language/query-params-picker-str
                                                              amelinium.http.middleware.language/path-picker
                                                              :language/user
                                                              :language/client
                                                              amelinium.http.middleware.language/accept-picker]
                                                    :browser [amelinium.http.middleware.language/form-params-picker-str
                                                              :language/user
                                                              amelinium.http.middleware.language/accept-picker
                                                              :language/client
                                                              :language/id
                                                              amelinium.http.middleware.language/path-picker]
                                                    :user    [amelinium.http.middleware.language/form-params-picker-str
                                                              :language/user
                                                              :language/client
                                                              amelinium.http.middleware.language/path-picker
                                                              amelinium.http.middleware.language/accept-picker
                                                              :language/id]}

 :amelinium.http.middleware.language/web {:default   :en
                                          :param     :lang
                                          :pickers   #ref :amelinium.http.middleware.language/web-pickers
                                          :supported #ref :amelinium.http.middleware.language/supported}

 :amelinium.http.middleware.content/web {:language #ref :amelinium.http.middleware.language/supported
                                         :mime     ["text/html"]
                                         :charset  :utf-8
                                         :encoding ["deflate" "gzip" "identity"]}

 ;; Coercion

 :amelinium.http.middleware.coercion/registry
 {:account-type {:compile amelinium.schemas/gen-account-type-schema
                 :options #ref :amelinium.auth/settings}
  :language     {:compile amelinium.schemas/gen-language-schema
                 :options #ref :amelinium.http.middleware.language/supported}}

 :amelinium.http.middleware.coercion/coercer
 {:init   reitit.coercion.malli/create
  :config {:transformers     {:body     {:default reitit.coercion.malli/default-transformer-provider
                                         :formats {"application/json" reitit.coercion.malli/json-transformer-provider}}
                              :string   {:default reitit.coercion.malli/string-transformer-provider}
                              :response {:default reitit.coercion.malli/default-transformer-provider
                                         :formats {"application/json" reitit.coercion.malli/json-transformer-provider}}}
           :error-keys       #{:coercion :type :in :value :errors :transformed}
           :lite             true
           :compile          malli.util/closed-schema
           :validate         true
           :enabled          true
           :strip-extra-keys true
           :default-values   true
           ;;:encode-error     amelinium.api.controller/handle-coercion-error
           ;; malli options
           :options          {:registry #ref :amelinium.http.middleware.coercion/registry}}}

 :amelinium.http.middleware.coercion/exceptions     {:handler amelinium.common.controller/handle-coercion-error}
 :amelinium.http.middleware.coercion/exceptions-web {:handler amelinium.web.controller/handle-coercion-error}
 :amelinium.http.middleware.coercion/exceptions-api {:handler amelinium.api.controller/handle-coercion-error}

 ;; Validation

 :amelinium.http.middleware.validators/all
 {:enabled?        false
  :init            #ref :amelinium.app/init
  :check-required? true
  :explain?        true
  :default-pass?   false
  :config-key      :validators/config
  :result-key      :validators/params-valid?
  :explain-key     :validators/reasons
  :required/source :required/user
  :required/mode   :all
  :required        []
  :validators      {:url         io.randomseed.utils.validators.common/valid-url?
                    :login       io.randomseed.utils.validators.common/valid-email?
                    :phone       io.randomseed.utils.validators.common/valid-phone?
                    :password    #re "|.{5,128}"
                    :session-id  amelinium.http.middleware.session/sid-match
                    :lang        amelinium.http.middleware.language/re-lang
                    :token       #re "|^[a-f0-9]{32,33}"
                    :first-name  #re "^[\\p{L} ,.'-]+$"
                    :last-name   #re "^[\\p{L} ,.'-]+$"
                    :middle-name #re "|^[\\p{L} ,.'-]+$"}
  :required/blank  [:first-name-fake :email-fake-id]
  :required/some   [:total-comma-fake :subzero]}

 ;; Population

 :amelinium.http.middleware.populators/web
 [[:route/data          amelinium.common.populators/route-data]
  [:language/user       amelinium.common.populators/user-lang]
  [:oplog/logger        amelinium.common.populators/oplog-logger]
  [:i18n/translator     amelinium.common.populators/i18n-translator]
  [:i18n/translator-sub amelinium.common.populators/i18n-translator-sub]]

 :amelinium.http.middleware.populators/post
 [[:i18n/translator     amelinium.common.populators/i18n-translator]
  [:i18n/translator-sub amelinium.common.populators/i18n-translator-sub]
  [:form/errors         amelinium.common.populators/form-errors]]

 :amelinium.http.middleware/web-renderer amelinium.web.controller/render!
 :amelinium.http.middleware/web-preparer amelinium.web.controller/prep!

 :amelinium.http.middleware.debug/web {:enabled?     false
                                       :request-keys [:accept]}

 :amelinium.web.taggers/web {:enabled?     true
                             :router       #ref :amelinium.app/http-router
                             :language     #ref :amelinium.http.middleware.language/web
                             :validators   #ref :amelinium.http.middleware.validators/all
                             :translations #ref :amelinium.i18n/translations}

 :amelinium.http.middleware/web [#ref :amelinium.http.middleware.lazy-req/all
                                 #ref :amelinium.http.middleware.content/web
                                 reitit.ring.middleware.parameters/parameters-middleware
                                 #ref :amelinium.http.middleware.coercion/exceptions-web
                                 reitit.ring.coercion/coerce-request-middleware
                                 reitit.ring.coercion/coerce-response-middleware
                                 #ref :amelinium.http.middleware.remote-ip/all
                                 #ref :amelinium.http.middleware.session/web
                                 #ref :amelinium.http.middleware.roles/web
                                 #ref :amelinium.http.middleware.validators/all
                                 #ref :amelinium.http.middleware.populators/web
                                 #ref :amelinium.http.middleware.language/web
                                 #ref :amelinium.http.middleware.headers/web
                                 #ref :amelinium.http.middleware.populators/post
                                 #ref :amelinium.http.middleware/web-preparer
                                 #ref :amelinium.http.middleware/web-renderer
                                 #ref :amelinium.http.middleware.debug/web]

 ;; HTTP routes

 :amelinium.http.router/web-routes []

 ;; HTTP default router

 :amelinium.http.router/web [#ref :amelinium.http.router/web-routes
                             {:data {:compile       reitit.coercion/compile-request-coercers
                                     :middleware    #ref :amelinium.http.middleware/web
                                     :translations  #ref :amelinium.i18n/translations
                                     :errors/config #ref :amelinium.errors/settings
                                     :auth/config   #ref :amelinium.auth/settings
                                     :oplog/config  #ref :amelinium.common.oplog.auth/log
                                     :coercion      #ref :amelinium.http.middleware.coercion/coercer
                                     ;;:exception  reitit.dev.pretty/exception
                                     :appinit       #ref :amelinium.app/init}}]

 ;; HTTP default handler

 :amelinium.http.handler/web {:router            #ref :amelinium.http.router/web
                              :resource-pathname "/"
                              :not-found         {:status 404 :body "NOT FOUND"}
                              :redirect-slash    :add}

 ;; Jetty server settings

 :amelinium.http.server/jetty {:enabled?             false
                               :ssl?                 true
                               :ssl-port             5000
                               :port                 4000
                               :host                 "0.0.0.0"
                               :join?                false
                               :keystore             "certs/zakrzep.p12"
                               :truststore           "certs/zakrzep-trust.p12"
                               :same-key-passwords?  true
                               :client-auth          :need
                               :send-server-version? false
                               :gzip?                true
                               :min-threads          100
                               :max-threads          200
                               :gzip-min-size        256
                               :gzip-types           ["text/css" "text/plain" "text/javascript"
                                                      "text/html" "text/xhtml" "text/markdown"
                                                      "text/pdf" "text/csv" "text/rss" "text/xsl"
                                                      "message/rfc822" "text/comma-separated-values"
                                                      "application/xhtml+xml" "application/javascript"
                                                      "application/json" "application/xml"
                                                      "application/pdf" "application/x-xml"
                                                      "application/mbox" "application/rdf+xml"
                                                      "application/rss+xml" "application/xml-dtd"
                                                      "image/svg+xml"]
                               :handler              #ref :amelinium.app/http-handler
                               :properties           #ref :amelinium.app/properties
                               :logger               #ref :amelinium.app/logger}

 ;; Undertow HTTP server settings

 :amelinium.http.server/undertow {:enabled?            false
                                  :http2?              true
                                  :ssl?                false
                                  :ssl-port            5000
                                  :port                4000
                                  :client-auth         :need
                                  :io-threads          10
                                  :host                "0.0.0.0"
                                  :keystore            "certs/zakrzep.p12"
                                  :truststore          "certs/zakrzep-trust.p12"
                                  :same-key-passwords? true
                                  :session-manager?    false
                                  :compress?           true
                                  :compress-predicate  "max-content-size(256) and regex(pattern='text|mess|app|image/svg', value='%{o,Content-Type}')"
                                  :handler             #ref :amelinium.app/http-handler
                                  :properties          #ref :amelinium.app/properties
                                  :logger              #ref :amelinium.app/logger}

 ;; Auth settings

 :amelinium.auth.pwd/settings.strong {:wait        0.4
                                      :wait-random [0 1.5]
                                      :wait-nouser 0.6
                                      :suite       #ref :amelinium.auth.pwd/suite.strong}

 :amelinium.auth.pwd/settings.simple {:wait        0.4
                                      :wait-random [0 1.5]
                                      :wait-nouser 0.6
                                      :suite       #ref :amelinium.auth.pwd/suite.simple}

 :amelinium.auth.pwd/suite.strong
 [{:name        :scrypt
   :handler     amelinium.auth.algo.scrypt/handler
   :salt-length 8
   :parallel    1}

  {:name         :pbkdf2
   :handler      amelinium.auth.algo.pbkdf2/handler
   :iterations   100000
   :salt-length  16
   :salt-charset "abcdefghijklmnopqrstuvwzyx0123456789-."}]

 :amelinium.auth.pwd/suite.simple
 [{:name         :pbkdf2
   :handler      amelinium.auth.algo.pbkdf2/handler
   :iterations   100000
   :salt-length  16
   :salt-charset "abcdefghijklmnopqrstuvwzyxABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789-."}]

 :amelinium.auth/strong {:db                   #ref :amelinium.db/main
                         :passwords            #ref :amelinium.auth.pwd/settings.strong
                         :account-types        :manager     ; account types handled by this engine
                         :locking/max-attempts 5            ; max failed attempts before soft-lock
                         :locking/lock-wait    [15 minutes] ; minutes to wait for unlock after soft-lock
                         :locking/fail-expires [5 minutes]  ; time for 1 failed attempt to be forgotten
                         }

 :amelinium.auth/simple {:db                   #ref :amelinium.db/main
                         :passwords            #ref :amelinium.auth.pwd/settings.simple
                         :account-types        :user        ; account types handled by this engine
                         :locking/max-attempts 5            ; max failed attempts before soft-lock
                         :locking/lock-wait    [10 minutes] ; minutes to wait for unlock after soft-lock
                         :locking/fail-expires [3 minutes]  ; time for 1 failed attempt to be forgotten
                         }

 ;; Main authentication configuration

 :amelinium.auth/settings {:db           #ref :amelinium.db/main ;; should hold a mapping of user ID / user e-mail to the account type
                           :default-type :user
                           :types        [#ref :amelinium.auth/strong
                                          #ref :amelinium.auth/simple]}

 ;; I18n

 :amelinium.i18n/translations {:tongue/fallback :en}

 ;; Error handling

 :amelinium.errors/priorities [:verify/bad-result
                               :verify/bad-token
                               :verify/bad-code
                               :verify/bad-email
                               :verify/bad-phone
                               :verify/bad-id
                               :verify/not-found
                               :verify/bad-reason
                               :verify/expired
                               :verify/too-many-requests
                               :verify/exists
                               :verify/not-confirmed
                               :verify/confirmed]

 :amelinium.errors/web {:priorities #ref :amelinium.errors/priorities
                        :responses  {:verify/confirmed     amelinium.web/render-already-reported
                                     :verify/exists        amelinium.web/render-conflict
                                     :verify/not-confirmed amelinium.web/render-unauthorized
                                     :verify/expired       amelinium.web/render-unauthorized
                                     :verify/max-attempts  amelinium.web/render-too-many-requests
                                     :verify/bad-id        amelinium.web/render-unauthorized
                                     :verify/bad-code      amelinium.web/render-unauthorized
                                     :verify/bad-token     amelinium.web/render-unauthorized
                                     :verify/bad-email     amelinium.web/render-unauthorized
                                     :verify/bad-phone     amelinium.web/render-unauthorized
                                     :verify/not-found     amelinium.web/render-unauthorized
                                     :verify/bad-reason    amelinium.web/render-forbidden
                                     :verify/bad-result    amelinium.web/render-internal-server-error}}

 :amelinium.errors/api {:priorities #ref :amelinium.errors/priorities
                        :responses  {:verify/confirmed     amelinium.api/render-already-reported
                                     :verify/exists        amelinium.api/render-conflict
                                     :verify/not-confirmed amelinium.api/render-unauthorized
                                     :verify/expired       amelinium.api/render-unauthorized
                                     :verify/max-attempts  amelinium.api/render-too-many-requests
                                     :verify/bad-id        amelinium.api/render-unauthorized
                                     :verify/bad-code      amelinium.api/render-unauthorized
                                     :verify/bad-token     amelinium.api/render-unauthorized
                                     :verify/bad-email     amelinium.api/render-not-found
                                     :verify/bad-phone     amelinium.api/render-not-found
                                     :verify/not-found     amelinium.api/render-not-found
                                     :verify/bad-reason    amelinium.api/render-forbidden
                                     :verify/bad-result    amelinium.api/render-internal-server-error}}

 ;; Logger

 :amelinium.logging/unilog {:system              #ref :amelinium.app/properties
                            :prev-config         {}
                            :level               :info
                            :console             false
                            :appenders           [{:appender       :rolling-file
                                                   :file           "${user.home}/.amelinium/amelinium.log"
                                                   :encoder        :pattern-cool
                                                   :pattern        "%p [%date{yyyy-MM-dd'T'HH:mm:ss, UTC},%date{SSS, UTC}Z] %t - %c %m%n"
                                                   :rolling-policy {:type        :time-based
                                                                    :max-history 7
                                                                    :pattern     ".%d{yyyy-MM-dd}"}}
                                                  {:appender       :rolling-file
                                                   :file           "${user.home}/.amelinium/amelinium-json.log"
                                                   :encoder        :json-log
                                                   :rolling-policy {:type        :time-based
                                                                    :max-history 7
                                                                    :pattern     ".%d{yyyy-MM-dd}"}}
                                                  {:appender :console-info
                                                   :encoder  :pattern
                                                   :pattern
                                                   "%highlight(%-5level) %gray([%d{HH:mm:ss, UTC}] %magenta([%-7thread])) %cyan(%-36c) %m%n"}]
                            :overrides           {"org.apache.http"                               :info
                                                  "org.apache.http.wire"                          :error
                                                  "org.eclipse.jetty"                             :info
                                                  "org.eclipse.jetty.util.log"                    :info
                                                  "io.netty"                                      :info
                                                  "io.netty.util"                                 :info
                                                  "io.netty.util.internal"                        :info
                                                  "io.netty.util.ResourceLeakDetector"            :info
                                                  "io.netty.util.internal.PlatformDependent"      :info
                                                  "io.netty.util.internal.PlatformDependent0"     :info
                                                  "io.netty.util.internal.CleanerJava9"           :info
                                                  "io.netty.util.internal.InternalThreadLocalMap" :info
                                                  }
                            :context-transformer {amelinium.logging/mask         [:password :pwd :private-key :private
                                                                                  :secret :signature :request-id
                                                                                  :anti-phisihng-code]
                                                  amelinium.logging/pseudonimize [:user :username :nick :nickname]
                                                  clojure.core/str               [:currency]
                                                  amelinium.logging/pr-session   [:session]}}}
